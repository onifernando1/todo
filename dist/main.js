(()=>{"use strict";const e={displaytoDo:e=>{const t=document.getElementById("content"),o=document.createElement("div");t.appendChild(o),((e,t)=>{const o=document.createElement("div");o.innerHTML=e.title,o.className="todo-title",t.appendChild(o)})(e,o),((e,t)=>{const o=document.createElement("div");o.innerHTML=e.description,o.className="todo-description",t.appendChild(o)})(e,o),((e,t)=>{const o=document.createElement("div");o.innerHTML=e.dueDate,o.className="todo-duedate",t.appendChild(o)})(e,o),((e,t)=>{const o=document.createElement("div");o.innerHTML=e.priority,o.className="todo-priority",t.appendChild(o)})(e,o)},displayAllProjects:()=>{(()=>{const e=document.getElementById("projects-container");for(;e.firstChild;)e.removeChild(e.lastChild)})(),(()=>{const e=document.getElementById("projects-container"),t=document.createElement("div");t.className="inner-projects-container",e.appendChild(t)})(),(void 0).forEach((e=>{const t=document.getElementById("projects-container"),o=document.createElement("div");o.className="individual-project-container",o.innerHTML=e.title,t.appendChild(o)}))}},t=(()=>{const t=[];return{showAllProjects:()=>{e.removeAllProjects(),e.displayAllProjects(t)},projectArray:t}})(),o=n=>{const c=[];return{title:n,toDoArray:c,showToDos:()=>{c.forEach((t=>{e.displaytoDo(t)}))},createFormListener:function(){document.getElementById("new-project-form").addEventListener("submit",(e=>{e.preventDefault();const n=function(){const e=document.getElementById("title").value;return o(e)}();t.projectArray.push(n)}))}}},n=o("ABC"),c=function(e,t,o,n){const c="incomplete";return{title:"abc",description:"abc",dueDate:"abc",priority:"abc",toDoStatus:c,create:(e,t,o,n)=>{newToDo=toDo(e,t,o,n)},change:(e,t)=>{this[e]=t},toDoStatus:c}}();n.toDoArray.push(c),n.showToDos(),n.createFormListener()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,