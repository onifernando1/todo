(()=>{"use strict";const e=e=>{const t=document.getElementById("content"),n=document.createElement("div");t.appendChild(n),((e,t)=>{const n=document.createElement("div");n.innerHTML=e.title,n.className="todo-title",t.appendChild(n)})(e,n),((e,t)=>{const n=document.createElement("div");n.innerHTML=e.description,n.className="todo-description",t.appendChild(n)})(e,n),((e,t)=>{const n=document.createElement("div");n.innerHTML=e.dueDate,n.className="todo-duedate",t.appendChild(n)})(e,n),((e,t)=>{const n=document.createElement("div");n.innerHTML=e.priority,n.className="todo-priority",t.appendChild(n)})(e,n)},t=e=>{(()=>{const e=document.getElementById("projects-container");for(;e.firstChild;)e.removeChild(e.lastChild)})(),(()=>{const e=document.getElementById("projects-container"),t=document.createElement("div");t.className="inner-projects-container",e.appendChild(t)})(),(e=>{e.forEach((e=>{const t=document.getElementById("projects-container"),n=document.createElement("div");n.className="individual-project-container",n.innerHTML=e.title,t.appendChild(n)}))})(e)},n=(()=>{const e=[];return{showAllProjects:()=>{t(e)},projectArray:e}})(),o=t=>{const c=[];return{title:t,toDoArray:c,showToDos:()=>{c.forEach((t=>{e(t)}))},createFormListener:function(){document.getElementById("new-project-form").addEventListener("submit",(e=>{e.preventDefault(),function(){const e=document.getElementById("title").value,t=o(e);console.log(n.projectArray),n.projectArray.push(t),n.showAllProjects()}()}))}}},c=o("ABC"),r=function(e,t,n,o){const c="incomplete";return{title:"abc",description:"abc",dueDate:"abc",priority:"abc",toDoStatus:c,create:(e,t,n,o)=>{newToDo=toDo(e,t,n,o)},change:(e,t)=>{this[e]=t},toDoStatus:c}}();c.toDoArray.push(r),c.showToDos(),n.showAllProjects(),c.createFormListener()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,